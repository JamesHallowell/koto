import map
from test import assert assert_eq

m = { foo: 42 }

# map.insert can be used to add or replace values to a map
old_value = map.insert m "foo" 99
assert_eq m.foo 99
assert_eq old_value 42

# map.insert without a value inserts ()
old_value = map.insert m "foo"
assert "foo" in m
assert_eq m.foo ()
assert_eq old_value 99

# map.insert can also insert non-string values as keys
map.insert m 1 "one"
map.insert m 2 "two"

# map.get returns the corresponding value if the key is present
assert_eq (map.get m 1) "one"
assert_eq (map.get m 3) ()

# map.remove removes a value from the map if present
assert_eq (map.remove m 1) "one"
assert_eq (map.remove m 2) "two"
assert_eq (map.remove m 1) ()

# map.keys
assert_eq (map.keys m) ["foo"]
map.insert m 0 "zero"
assert_eq (map.keys m) ["foo" 0]

# map.values
assert_eq (map.values m) [() "zero"]
m.foo = 123
assert_eq (map.values m) [123 "zero"]
