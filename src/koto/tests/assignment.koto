from test import assert_eq assert_ne

a, b, c, d, e = 1, 2, 3, 4, 5, 6, 7, 8,
assert_eq c 3
assert_eq e 5

a = 1
b = -a
assert_eq a -b

# Unicode is allowed in idenifiers
やあ = héllø = 99
assert_eq héllø 99
assert_eq やあ 99

# Assignments return the assigned value
assert_eq (a = 42) 42

# Assignments can be chained
a = b = -1
assert_eq a -1
assert_eq b -1

f = ||
  export x = 42
f()
assert_eq x 42

f2 = ||
  export x = x * 2
f2()
assert_eq x 84

f3 = ||
  x = x + 15 # assigning x in local scope
  assert_eq x 99
f3()
assert_eq x 84 # exported x remains the same

# Assignments can be broken up with indentation (trailing commas are optional)
f4 = |n| n
a, b, c =
  1,
  f4 2,
  f4 3,
assert_eq a 1
assert_eq b 2
assert_eq c 3

###### Empty
a = ()
assert_eq a ()
assert_ne 1 ()
