z = [10, 10 + 10, 30]
assert_eq(z[0], 10)
assert_eq(z[0 + 1], 20)

assert_eq(z, z)
assert_ne(z, [])

assert_eq(z + z, [10, 20, 30, 10, 20, 30])

y = list.add(z, 40, 50)
assert_eq(y[3], 40)

assert_eq(length y, 5)
assert_eq(length z, 3)

a, b, c = [10, 20, 30, 40]
assert (a == 10) and (b == 20) and (c == 30)

# TODO unpacking should only for 1 arg
# a, b, c = [10, 20], [30, 40]
# assert (a == [10, 20]) and (b == [30, 40]) and (c == ())

assert list.is_sortable [42, 10, 9]
assert_eq(list.is_sortable ["42", 10, 9], false) # TODO not
assert list.is_sortable ["42", "10", "9"]
assert_eq(list.sort [42, 10, 9], [9, 10, 42])


