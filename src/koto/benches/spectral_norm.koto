#-
An implementation of the Benchmark Game's spectral norm program
https://benchmarksgame-team.pages.debian.net/benchmarksgame/description/spectralnorm.html#spectralnorm

Adapted from the Lua implementation by Mike Pall
https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/spectralnorm-lua-1.html
-#

import env io.print list math string

A = |i j|
  ij = i + j - 1
  1.0 / (ij * (ij - 1) * 0.5 + i)

Av = |x y n|
  i = 0
  y.transform |n|
    i += 1
    j = 0
    x.fold 0 |result n|
      j += 1
      result + n * (A i j)

Atv = |x y n|
  i = 0
  y.transform |n|
    i += 1
    j = 0
    x.fold 0 |result n|
      j += 1
      result + n * (A j i)

AtAv = |x y t n|
  Av x t n
  Atv t y n

export main = ||
  n = match env.args.get 0
    () then 4
    arg then string.to_number arg

  u = [1 for _ in 0..n]
  v = [0 for _ in 0..n]
  t = [0 for _ in 0..n]
  for _ in 0..10
    AtAv u v t n
    AtAv v u t n
  vBv, vv = 0, 0
  for ui, vi in u, v
    vBv = vBv + ui * vi
    vv = vv + vi * vi
  result = math.sqrt vBv / vv

  if (env.args.get 1) != "quiet"
    print result
