a = make_num4
  0, 1, 2, 3
b = make_num4
  0, 1,
  2, 3
assert_eq a, b

a = make_num4(1,
  2, 3,
  4
)
b = make_num4(
  1,
  2, 3, # Comments can be included in the num4 construction
  4
)
assert_eq a, b

x = (1, 2, 3).fold(
  0,
  |a, b| a + b
)
assert_eq x, 6

x = (1, 2, 3)
  .each |n| n
  # This comment shouldn't interrupt the chain
  .fold 0, |a, b| a + b
assert_eq x, 6

x =
  [1, 2, 3]
    .each |n| n
    # This comment shouldn't interrupt the chain
    .fold 0, |a, b| a + b
assert_eq x, 6

x =
  "hello"
    .count()
assert_eq x, 5

assert_equal = |
  long_arg, # This is an argument that needs an explanation
  long_arg_2,
|
  # The body must be indented
  assert_eq
    long_arg, # call args can be indented
    long_arg_2

assert_equal
  1234,
  1234

m = {
  foo:
    42,
  bar:
    -1,
}
assert_eq m.bar, -1

x = [
  42,
  99,
]
assert_eq x[1], 99

# Linebreaks before operators
a = 1
  + 2 + #- inline comment -# 3
    # Another comment
    + 4
assert_eq a, 10

# Linebreaks after operators
a = 1 +
    # Indentation can increase between operators
      2 + #- inline comment -# 3 +
        # Another comment
        4
assert_eq a, 10
