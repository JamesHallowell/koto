import test.assert_eq

test_map = ||
  child_map:
    foo: 42
    set_foo: |self, x| self.foo = x
  get_child_map: |self| self.child_map

# Make a list of two test maps
maps = [test_map(), test_map()]

export @tests =
  @test call_setter_in_child_map_in_list: ||
    # set the first map's child foo
    assert_eq maps[0].get_child_map().foo, 42
    maps[0].get_child_map().set_foo -1
    assert_eq maps[0].get_child_map().foo, -1
    assert_eq maps[0].child_map.foo, -1
    # the second map's child foo hasn't been modified
    assert_eq maps[1].get_child_map().foo, 42

  @test negation_of_lookup: ||
    assert_eq -maps[1].get_child_map().foo, -42

  @test chained_function_call: ||
    f = ||
      # Calling f() returns the following function
      |x| x * x
    assert_eq f()(8), 64
