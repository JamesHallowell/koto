from test import assert, assert_eq

export @tests =
  @test for_block: ||
    count = 0
    for x in 0..10
      for y in -5..5
        if x == y and x < 3
          assert_eq x, y

          # loop bodies share scope of statement
          count += 1

    assert_eq count, 3

  @test for_break_continue: ||
    count = 0
    for i in 0..100
      if i % 2 == 0
        continue
      else if i == 5
        break
      else
        count += 1
    assert_eq count, 2 # 2 odd numbers less than 5

  @test while_block: ||
    count = 0
    while count < 5
      count += 1
      assert not count > 5

  @test while_break_continue: ||
    count = 0
    while true
      count += 1
      if count < 10
        continue
      else
        break
      assert false
    assert_eq count, 10

  @test until_block: ||
    count = 5
    until count == 0
      count -= 1
      assert count < 5
    assert_eq count, 0

  @test loop_break: ||
    count = 0
    loop
      count += 1
      if count == 5
        break
    assert_eq count, 5
