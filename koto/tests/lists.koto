from test import assert assert_eq assert_ne

export tests =
  test_list_indexing: ||
    z = [10 (10 + 10) 30]
    assert_eq z[0] 10
    assert_eq z[0 + 1] 20

  test_list_equality: ||
    z = [1 2 3]
    assert_eq z z
    assert_ne z []

  test_list_addition: ||
    x = [0]
    x = x + [1]
    assert_eq x [0 1]
    x += [2 3]
    assert_eq x [0 1 2 3]

  test_list_unpacking: ||
    a, b, c = [10 20 30 40]
    assert_eq a 10
    assert_eq b 20
    assert_eq c 30

  test_list_multiple_assignment: ||
    a, b, c = [10 20], [30 40]
    assert_eq a [10 20]
    assert_eq b [30 40]
    assert_eq c ()

  test_list_shared_data: ||
    a = [0 1 2]
    b = a # Assigning a list makes a new reference to the same data
    a[0] = 42
    assert_eq a [42 1 2]
    a[1], a[2] = -42, 99
    assert_eq a [42 -42 99]
    a[1..] = 0
    assert_eq a [42 0 0]
    a[1] += 2
    assert_eq a [42 2 0]
    # b still refers to the same underlying data
    assert_eq a b
    # assigning a new list to a doesn't affect b's binding
    a = [1 2 3]
    assert_eq a [1 2 3]
    assert_eq b [42 2 0]

  test_lists_in_lists: ||
    b = [42 42]
    a = [b b b]
    assert_eq a[1][1] 42
    a[1][1] = -1
    assert_eq a[1][1] -1
