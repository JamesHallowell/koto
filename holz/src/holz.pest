WHITESPACE = _{ " " | "\t" }
COMMENT = _{ comment_multi | comment_single }
comment_multi = _{ "###" ~ (!"###" ~ ANY)+ ~ "###" }
comment_single = _{ "#" ~ (!NEWLINE ~ ANY)* }

program = _{
  SOI
  ~ block*
  ~ NEWLINE*
  ~ EOI
}

block = @{
  (NEWLINE | COMMENT)*
  ~ statement
  ~ (next_statement)*
}

statement = _{ expression }
next_statement = _{ indentation ~ statement }

indentation = ${ NEWLINE ~ PEEK_ALL }
push_indentation = ${ indentation ~ PUSH(indent) }

indent = _{ WHITESPACE+ }

child_block = _{
  push_indentation
  ~ block
  ~ DROP
}

expression = !{
  ( assignment
  | binary_op
  | function
  | term
  )
  ~ COMMENT?
}

term = _{
  "(" ~ expression ~ ")"
  | call
  | array
  | string
  | number
  | boolean
  | id
}

keyword = _{ "and" | "or" | "class" }

id = @{ !(keyword ~ !id_end) ~ id_start ~ id_end* }
id_start = @{ ASCII_ALPHA }
id_end = @{ ASCII_ALPHANUMERIC | "_" }

boolean = { "true" | "false" }

number = @{
  "-"?
  ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
  ~ ("." ~ ASCII_DIGIT*)?
  ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

array = {
  "[" ~ "]"
  | "[" ~ expression ~ ("," ~ expression)* ~ "]"
}

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
  !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
}

call = {
  (id ~ parameters)
  | (id ~ expression)
}

parameters = _{
  "(" ~ ")"
  | "(" ~ expression ~ ("," ~ expression)* ~ ")"
}

assignment = { id ~ "=" ~ expression }

binary_op = { term ~ (arithemetic_op | logic_op) ~ expression }
arithemetic_op = {
  "+" | "-" | "/" | "*"
}

logic_op = {
  "==" | "!=" | "<=" | "<" | ">=" | ">" | "and" | "or"
}

function = {
  function_args ~ (expression | child_block)
}
function_args = {
  "|" ~ "|"
  | "|" ~ id ~ ("," ~ id)* ~ "|"
}
